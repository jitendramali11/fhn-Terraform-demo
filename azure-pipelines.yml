# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default
  vmImage: Jitendra-PC


stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@2
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformCLI@2
            displayName: 'Init'
            inputs:
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
          
          - task: TerraformCLI@2
            displayName: validate
            inputs:
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
            
  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        continueOnError: false
        steps:
          - task: TerraformInstaller@2
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformCLI@2
            displayName: 'Init'
            inputs:
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
          - task: TerraformCLI@2
            displayName: Plan
            inputs:
              command: 'plan'
              environmentServiceName: 'dev-fhn-svc'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'
          - task: TerraformCLI@2
            inputs:
              command: 'apply'
              environmentServiceName: 'dev-fhn-svc'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environments/dev'


          
          
             
             

    
